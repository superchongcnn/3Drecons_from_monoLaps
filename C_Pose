# 4. Camera pose estimation
# src/camera_pose.py

import cv2
import numpy as np

class CameraPoseEstimator:
    def __init__(self, config):
        self.config = config

    def estimate_pose(self, kp1, kp2, matches, K):
        """Estimate relative camera pose between two views"""
        # Get matched point coordinates
        src_pts = np.float32([kp1[m.queryIdx].pt for m in matches]).reshape(-1, 1, 2)
        dst_pts = np.float32([kp2[m.trainIdx].pt for m in matches]).reshape(-1, 1, 2)

        # Calculate essential matrix
        E, mask = cv2.findEssentialMat(
            src_pts, dst_pts, K,
            method=cv2.RANSAC,
            prob=0.999,
            threshold=self.config.RANSAC_REPROJ_THRESHOLD
        )

        # Recover pose (R,t) from essential matrix
        _, R, t, mask = cv2.recoverPose(E, src_pts, dst_pts, K)

        return R, t, mask
